import numpy as np


def interpolTilt(distancia,ip):
	
	grado=7

	if(ip=='172.22.120.194'):

		x = np.array([230.584717972,287.677562127,394.373853556,347.955024534,246.128631013,161.571893036,335.436187537,212.363142341,96.5359746934])


		y = np.array([0.518182,0.523636,0.532727,0.523636,0.510909,0.485455,0.512727,0.490909,0.430909])


		z = np.polyfit(x, y, grado)

	 	p = np.poly1d(z)

 	elif(ip=='172.22.120.193'):

 		
		x = np.array([62.858811949,11.7373223755,223.882407648,283.846090973,392.94083806,245.501090971,158.616954687,339.318756225,216.448407238,106.698428465])
		y = np.array([0.334545,0.087273,0.494545,0.507273,0.516364,0.501818,0.472727,0.516364,0.496364,0.478182])
		
		f = np.polyfit(x, y, grado)

	 	p = np.poly1d(f)
 	


 	p1=p(distancia)

 	print p1
 	if p1>=1:
 		p1=1
 	if p1<=-1:
 		p1=-1

	return p1


def interpolZoom(distancia):

	x = np.array([223.882407648,283.846090973,392.94083806,245.501090971,158.616954687,339.318756225,216.448407238,106.698428465,62.858811949,11.7373223755])

	y = np.array([0.898438,1.0,1.0,0.984375,0.34375,1.0,0.578125,0.3125,0.0625,0.015625])



	z = np.polyfit(x, y,7)

 	p = np.poly1d(z)




 	p1=p(distancia)-0.17

 	if p1>=1:
 		p1=1

 	if p1<=0:
 		p1=0

	return p1



def interpolPan(pan):



	if (pan>.26 and pan <1) or(pan>-1 and pan<-0.785):
		#datos erroneos
		x = np.array([-0.89500031057,0.995966399243,0.915267816935,0.887912277315,0.957222,0.748989094646,0.739741189081,0.327426512115,-0.785126549961,0.266680743894])#,-0.23050397569,-0.0919936730084,0.0458805177159])
		#datos correctos
		#x = np.array([-0.90465031057,-0.992633600757,0.917708247512,0.890352707892,0.959662430577,0.751429525223,0.742181619658,0.314092512115,-0.794776549961,0.253346743894]#,-0.24155857569,-0.103048273008,0.0325465177159])

		y = np.array([-0.895,0.997222,0.925556,0.888333,0.957222,0.758889,0.75,0.324444,-0.782778,0.394444])#,-0.21,-0.078333,0.055556 ])

		z = np.polyfit(x, y,9)

		p = np.poly1d(z)

	 	p1=p(pan)
	if (pan>0 and pan<0.26) or(pan<0 and pan>-0.785):

		p1=pan
		#x = np.array([-0.23050397569,-0.0919936730084,0.0458805177159])
		#y = np.array([-0.21,-0.078333,0.055556 ])
		
		#z = np.polyfit(x, y,2)
 	
 	


	return p1
